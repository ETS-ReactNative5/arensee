import React, { useContext, useState } from 'react';
import { View } from 'react-native';
import getStyles from './styles';
import { ConfirmContext } from '../context';
const Actions = ({ dismiss }) => {
    const { theme } = useContext(ConfirmContext);
    const styles = getStyles(theme);
    const [loading, setLoading] = useState(false);
    const { cancelLabel, confirmLabel, onConfirm, showCancel, cancelButtonStyle, cancelButtonLabelStyle, cancelButtonProps, confirmButtonStyle, confirmButtonLabelStyle, confirmButtonProps, ButtonComponent, buttonProps } = useContext(ConfirmContext);
    const handleConfirm = async () => {
        setLoading(true);
        try {
            await onConfirm();
            dismiss();
        }
        catch (_a) {
            setLoading(false);
        }
    };
    return (<View style={styles.actions}>
      {showCancel &&
        <ButtonComponent onPress={dismiss} inverse {...buttonProps} {...cancelButtonProps} style={[styles.cancel, buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.style, cancelButtonProps === null || cancelButtonProps === void 0 ? void 0 : cancelButtonProps.style, cancelButtonStyle]} labelStyle={[buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.labelStyle, cancelButtonProps === null || cancelButtonProps === void 0 ? void 0 : cancelButtonProps.labelStyle, cancelButtonLabelStyle]}>
          {cancelLabel}
        </ButtonComponent>}
      <ButtonComponent loading={loading} onPress={handleConfirm} {...buttonProps} {...confirmButtonProps} style={[styles.confirm, buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.style, confirmButtonProps === null || confirmButtonProps === void 0 ? void 0 : confirmButtonProps.style, confirmButtonStyle]} labelStyle={[buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.labelStyle, confirmButtonProps === null || confirmButtonProps === void 0 ? void 0 : confirmButtonProps.labelStyle, confirmButtonLabelStyle]}>
        {confirmLabel}
      </ButtonComponent>
    </View>);
};
export default Actions;
